-- entrar no usuário postgres
su - postgres
Password: postgres

-- criar meu usuário
createuser joseluiz -dPs
Enter password for new role: 222
Enter it again: 222

-- entrar no postgres
psql
Password: computacao@raiz

/*criar o banco
determinar os parâmetros*/
create database uvv with
owner = 'joseluiz'
template = template0
encoding = 'UTF8'
lc_collate = 'pt_BR.UTF-8'
lc_ctype = 'pt_BR.UTF-8'
allow_connections = true;

-- conectar o banco com o dono, que sou eu
\connect uvv joseluiz
Password: 222

--criar o esquema
create schema elmasri authorization joseluiz;

-- permanentizar o esquema como o padrão
alter user joseluiz
set search_path to elmasri, "$user", public;

/*criar a tabela funcionário
criar todas as colunas
determinar a chave primária*/
CREATE TABLE Elmrasi.funcionario (
                cpf CHAR(11) NOT NULL,
                primeiro_nome VARCHAR(15) NOT NULL,
                nome_meio CHAR(1),
                ultimo_nome VARCHAR(15) NOT NULL,
                data_nascimento DATE,
                endereco VARCHAR(30),
                sexo CHAR(1),
                salario NUMERIC(10,2),
                cpf_supervisor CHAR(11),
                CONSTRAINT funcionario_pk PRIMARY KEY (cpf)
);

-- adicionar o comentário da tabela funcionário
COMMENT ON TABLE Elmrasi.funcionario IS 'Tabela que armazena as informações dos funcionários.';

-- adicionar os comentários de todas as colunas da tabela funcionário
COMMENT ON COLUMN Elmrasi.funcionario.cpf IS 'CPF do funcionário. Será a PK da tabela.';
COMMENT ON COLUMN Elmrasi.funcionario.primeiro_nome IS 'Primeiro nome do funcionário.';
COMMENT ON COLUMN Elmrasi.funcionario.nome_meio IS 'Inicial do nome do meio.';
COMMENT ON COLUMN Elmrasi.funcionario.ultimo_nome IS 'Sobrenome do funcionário.';
COMMENT ON COLUMN Elmrasi.funcionario.endereco IS 'Endereço do funcionário.';
COMMENT ON COLUMN Elmrasi.funcionario.sexo IS 'Sexo do funcionário.';
COMMENT ON COLUMN Elmrasi.funcionario.salario IS 'Salário do funcionário.';
COMMENT ON COLUMN Elmrasi.funcionario.cpf_supervisor IS 'CPF do supervisor. Será uma FK para a própria tabela (um auto-relacionamento).';

/*criar a tabela departamento
criar todas as colunas
determinar a chave primária*/
CREATE TABLE Elmrasi.departamento (
                numero_departamento INTEGER NOT NULL,
                nome_departamento VARCHAR(15) NOT NULL,
                cpf_gerente CHAR(11) NOT NULL,
                data_inicio_gerente DATE,
                CONSTRAINT departamento_pk PRIMARY KEY (numero_departamento)
);

-- adicionar o comentário da tabela funcionário
COMMENT ON TABLE Elmrasi.departamento IS 'Tabela que armazena as informaçoẽs dos departamentos';

-- adicionar os comentários de todas as colunas da tabela funcionário
COMMENT ON COLUMN Elmrasi.departamento.numero_departamento IS 'Número do departamento. É a PK desta tabela.';
COMMENT ON COLUMN Elmrasi.departamento.nome_departamento IS 'Nome do departamento. Deve ser único.';
COMMENT ON COLUMN Elmrasi.departamento.cpf_gerente IS 'CPF do gerente do departamento. É uma FK para a tabela funcionários.';
COMMENT ON COLUMN Elmrasi.departamento.data_inicio_gerente IS 'Data do início do gerente no departamento.';

-- transformar nome_departamento em uma chave alternativa da tabela departamento
CREATE UNIQUE INDEX departamento_idx
 ON Elmrasi.departamento
 ( nome_departamento );

/*criar a tabela projeto
criar todas as colunas
determinar a chave primária*/
CREATE TABLE Elmrasi.projeto (
                numero_projeto INTEGER NOT NULL,
                nome_projeto VARCHAR(15) NOT NULL,
                local_projeto VARCHAR(15),
                numero_departamento INTEGER NOT NULL,
                CONSTRAINT projeto_pk PRIMARY KEY (numero_projeto)
);

-- adicionar o comentário da tabela projeto
COMMENT ON TABLE Elmrasi.projeto IS 'Tabela que armazena as informações sobre os projetos dos departamentos.';

-- adicionar os comentários de todas as colunas da tabela projeto
COMMENT ON COLUMN Elmrasi.projeto.numero_projeto IS 'Número do projeto. É a PK desta tabela.';
COMMENT ON COLUMN Elmrasi.projeto.nome_projeto IS 'Nome do projeto. Deve ser único.';
COMMENT ON COLUMN Elmrasi.projeto.local_projeto IS 'Localização do projeto.';
COMMENT ON COLUMN Elmrasi.projeto.numero_departamento IS 'Número do departamento. É uma FK para a tabela departamento.';

-- transformar nome_projeto em uma chave alternativa da tabela projeto
CREATE UNIQUE INDEX projeto_idx
 ON Elmrasi.projeto
 ( nome_projeto );

/*criar a tabela trabalha_em
criar todas as colunas
determinar a chave primária*/
CREATE TABLE Elmrasi.trabalha_em (
                cpf_funcionario CHAR(11) NOT NULL,
                numero_projeto INTEGER NOT NULL,
                horas NUMERIC(3,1),
                numero_departamento_do_funcionario INTEGER NOT NULL,
                CONSTRAINT trabalha_em_pk PRIMARY KEY (cpf_funcionario, numero_projeto)
);

-- adicionar o comentário da tabela trabalha_em
COMMENT ON TABLE Elmrasi.trabalha_em IS 'Tabela para armazenar quais funcionários trabalham em quais projetos.';

-- adicionar os comentários de todas as colunas da tabela trabalha_em
COMMENT ON COLUMN Elmrasi.trabalha_em.cpf_funcionario IS 'CPF do funcionário. Faz parte da PK desta tabela e é uma FK para a tabela funcionário.';
COMMENT ON COLUMN Elmrasi.trabalha_em.numero_projeto IS 'Número do projeto. Faz parte da PK desta tabela e é uma FK para a tabela projeto.';
COMMENT ON COLUMN Elmrasi.trabalha_em.horas IS 'Horas trabalhadas pelo funcionário neste projeto.';
COMMENT ON COLUMN Elmrasi.trabalha_em.numero_departamento_do_funcionario IS 'Número do departamento do funcionário.';

/*criar a tabela localizacoes_departamento
criar todas as colunas 
determinar a chave primária*/
CREATE TABLE Elmrasi.localizacoes_departamento (
                numero_departamento INTEGER NOT NULL,
                local VARCHAR(15) NOT NULL,
                CONSTRAINT localizacoes_departamento_pk PRIMARY KEY (numero_departamento, local)
);

-- adicionar o comentário da tabela localizacoes_departamento
COMMENT ON TABLE Elmrasi.localizacoes_departamento IS 'Tabela que armazena as possíveis localizações dos departamentos.';

-- adicionar os comentários de todas as colunas da tabela localizacoes_departamento
COMMENT ON COLUMN Elmrasi.localizacoes_departamento.numero_departamento IS 'Número do departamento. Faz parta da PK desta tabela e também é uma FK para a tabela departamento.';
COMMENT ON COLUMN Elmrasi.localizacoes_departamento.local IS 'Localização do departamento. Faz parte da PK desta tabela.';

/*criar a tabela dependente
criar todas as colunas 
determinar a chave primária*/
CREATE TABLE Elmrasi.dependente (
                cpf_funcionario CHAR(11) NOT NULL,
                nome_dependente VARCHAR(15) NOT NULL,
                sexo CHAR(1),
                data_nascimento DATE,
                parentesco VARCHAR(15),
                CONSTRAINT dependente_pk PRIMARY KEY (cpf_funcionario, nome_dependente)
);

-- adicionar o comentário da tabela dependente
COMMENT ON TABLE Elmrasi.dependente IS 'Tabela que armazena as informações dos dependentes dos funcionários.';

-- adicionar os comentários de todas as colunas da tabela dependente
COMMENT ON COLUMN Elmrasi.dependente.cpf_funcionario IS 'CPF do funcionário. Faz parte da PK desta tabela e é uma FK para a tabela funcionário.';
COMMENT ON COLUMN Elmrasi.dependente.nome_dependente IS 'Nome do dependente. Faz parte da PK desta tabela.';
COMMENT ON COLUMN Elmrasi.dependente.sexo IS 'Sexo do dependente.';
COMMENT ON COLUMN Elmrasi.dependente.data_nascimento IS 'Data de nascimento do dependente.';
COMMENT ON COLUMN Elmrasi.dependente.parentesco IS 'Descrição do parentesco do dependente com o funcionário.';

/* tornar cpf_funcionario uma chave estrangeira na tabela dependente
fazer ela se referir à chave primária cpf da tabela funcionário*/
ALTER TABLE Elmrasi.dependente ADD CONSTRAINT funcionario_dependente_fk
FOREIGN KEY (cpf_funcionario)
REFERENCES Elmrasi.funcionario (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

/* tornar cpf_gerente uma chave estrangeira na tabela departamento
fazer ela se referir à chave primária cpf da tabela funcionário*/
ALTER TABLE Elmrasi.departamento ADD CONSTRAINT funcionario_departamento_fk
FOREIGN KEY (cpf_gerente)
REFERENCES Elmrasi.funcionario (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

/* tornar cpf_funcionario uma chave estrangeira na tabela trabalha_em
fazer ela se referir à chave primária cpf da tabela funcionário*/
ALTER TABLE Elmrasi.trabalha_em ADD CONSTRAINT funcionario_trabalha_em_fk
FOREIGN KEY (cpf_funcionario)
REFERENCES Elmrasi.funcionario (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

/* tornar cpf_supervisor uma chave estrangeira na tabela funcionário
fazer ela se referir à chave primária cpf da mesma tabela*/
ALTER TABLE Elmrasi.funcionario ADD CONSTRAINT funcionario_funcionario_fk
FOREIGN KEY (cpf_supervisor)
REFERENCES Elmrasi.funcionario (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

/* tornar numero_departamento uma chave estrangeira na tabela localizacoes_departamento
fazer ela se referir à chave primária de mesmo nome da tabela departamento*/
ALTER TABLE Elmrasi.localizacoes_departamento ADD CONSTRAINT departamento_localizacoes_departamento_fk
FOREIGN KEY (numero_departamento)
REFERENCES Elmrasi.departamento (numero_departamento)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

/* tornar numero_departamento uma chave estrangeira na tabela projeto
fazer ela se referir à chave primária de mesmo nome da tabela departamento*
ALTER TABLE Elmrasi.projeto ADD CONSTRAINT departamento_projeto_fk
FOREIGN KEY (numero_departamento)
REFERENCES Elmrasi.departamento (numero_departamento)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

/* tornar numero_departamento uma chave estrangeira na tabela trabalha_em
fazer ela se referir à chave primária de mesmo nome da tabela departamento*/
ALTER TABLE Elmrasi.trabalha_em ADD CONSTRAINT departamento_trabalha_em_fk
FOREIGN KEY (numero_departamento_do_funcionario)
REFERENCES Elmrasi.departamento (numero_departamento)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

/* tornar numero_projeto_do_funcionario uma chave estrangeira na tabela trabalha_em
fazer ela se referir à chave primária de mesmo nome da tabela projeto*/
ALTER TABLE Elmrasi.trabalha_em ADD CONSTRAINT projeto_trabalha_em_fk
FOREIGN KEY (numero_projeto)
REFERENCES Elmrasi.projeto (numero_projeto)
ON DELETE NO ACTION
ON UPDATE NO ACTION
NOT DEFERRABLE;

-- inserir os dados de Jorge na tabela funcionario
INSERT INTO Elmrasi.funcionario
VALUES(
'88866555576',
'Jorge', 
'E', 
'Brito', 
'1937-11-10', 
'Rua do Horto, 35, São Paulo, SP',
'M',
55000,
NULL
);

-- inserir os dados de Fernando na tabela funcionario
INSERT INTO Elmrasi.funcionario
VALUES(
'33344555587',
'Fernando', 
'T', 
'Wong', 
'1955-12-08', 
'Rua da Lapa, 34, São Paulo, SP',
'M',
40000,
'88866555576'
);

-- inserir os dados de Jennifer na tabela funcionario
INSERT INTO Elmrasi.funcionario
VALUES(
'98765432168',
'Jennifer', 
'S', 
'Souza', 
'1941-06-20', 
'Av. Arthur de Lima, 54, Santo André, SP',
'F',
43000,
'88866555576'
);

-- inserir os dados de João na tabela funcionario
INSERT INTO Elmrasi.funcionario
VALUES(
'12345678966',
'João', 
'B', 
'Silva', 
'1965-01-09', 
'Rua das Flores, 751, São Paulo, SP',
'M',
30000,
'33344555587'
);

-- inserir os dados de Alice na tabela funcionario
INSERT INTO Elmrasi.funcionario
VALUES(
'99988777767',
'Alice', 
'J', 
'Zelaya', 
'1968-01-19', 
'Rua Souza Lima, 35, Curitiba, PR',
'F',
25000,
'98765432168'
);

-- inserir os dados de Ronaldo na tabela funcionario
INSERT INTO Elmrasi.funcionario
VALUES(
'66688444476',
'Ronaldo', 
'K', 
'Lima', 
'1962-09-15', 
'Rua Rebouças, 65, Piracicaba, SP',
'M',
38000,,
'33344555587'
);

-- inserir os dados de Joice na tabela funcionario
INSERT INTO Elmrasi.funcionario
VALUES(
'45345345376',
'Joice', 
'A', 
'Leite', 
'1972-07-31', 
'Av. Lucas Obes, 74, São Paulo, SP',
'F',
25000,
'33344555587'
);

-- inserir os dados de André na tabela funcionario
INSERT INTO Elmrasi.funcionario
VALUES(
'98798798733',
'André', 
'V', 
'Pereira', 
'1969-03-29', 
'Rua Timbeira, 35, São Paulo, SP',
'M',
25000,
'98765432168'
);

-- inserir os dados do departamento Pesquisa na tabela departamento

INSERT INTO Elmrasi.departamento
VALUES(
5,
'Pesqusia',
'33344555587',
'1988-05-22'
);

-- inserir os dados do departamento Administração na tabela departamento

INSERT INTO Elmrasi.departamento
VALUES(
4,
'Administração',
'98765432168',
'1995-01-01'
);

-- inserir os dados do departamento Matriz na tabela departamento

INSERT INTO Elmrasi.departamento
VALUES(
1,
'Matriz',
'88866555576',
'1981-06-19');

-- inserir os dados do departamento 1 na tabela localizacoes_departamento
INSERT INTO Elmrasi.localizacoes_departamento
VALUES(
1,
'São Paulo'
);

-- inserir os dados do departamento 4 na tabela localizacoes_departamento
INSERT INTO Elmrasi.localizacoes_departamento
VALUES(
4,
'Mauá'
);

-- inserir os dados do departamento 5 de Santo André na tabela localizacoes_departamento
INSERT INTO Elmrasi.localizacoes_departamento
VALUES(
5,
'Santo André'
);

-- inserir os dados do departamento 5 de Itu na tabela localizacoes_departamento
INSERT INTO Elmrasi.localizacoes_departamento
VALUES(
5,
'Itu'
);

-- inserir os dados do departamento 5 de São Paulo na tabela localizacoes_departamento
INSERT INTO Elmrasi.localizacoes_departamento
VALUES(
5,
'São Paulo'
);

-- inserir os dados do projeto 1 na tabela projeto
INSERT INTO Elmrasi.projeto
VALUES(
1,
'Produto X',
'Santo André',
5);

-- inserir os dados do projeto 2 na tabela projeto
INSERT INTO Elmrasi.projeto
VALUES(
2,
'Produto Y',
'Itu',
5
);

-- inserir os dados do projeto 3 na tabela projeto
INSERT INTO Elmrasi.projeto
VALUES(
3,
'Produto Z',
'São Paulo',
5);

-- inserir os dados do projeto 10 na tabela projeto
INSERT INTO Elmrasi.projeto
VALUES(
10,
'Informatização',
'Mauá',
4);

-- inserir os dados do projeto 20 na tabela projeto
INSERT INTO Elmrasi.projeto
VALUES(
20,
'Reorganiazãço',
'São Paulo',
1);

-- inserir os dados do projeto 30 na tabela projeto
INSERT INTO Elmrasi.projeto
VALUES(
30,
'Novos benefícios',
'Mauá',
4);

-- inserir os dados dos dependentes de Fernando na tabela dependentes
INSERT INTO Elmrasi.dependente VALUES (
'33344555587',
'Alicia',
'F',
'1986-04-05',
'Filha');

INSERT INTO Elmrasi.dependente VALUES (
'33344555587',
'Tiago',
'M',
'1983-10-25',
'Filho');

INSERT INTO Elmrasi.dependente VALUES (
'33344555587',
'Janaína',
'F',
'1958-05-03',
'Esposa');

-- inserir os dados dos dependentes de Jeniffer na tabela dependentes
INSERT INTO Elmrasi.dependente VALUES( 
'98765432168',
'Antonio',
'M',
'1942-02-28',
'Marido');

-- inserir os dados dos dependentes de João na tabela dependentes
INSERT INTO Elmrasi.dependente VALUES( 
'12345678966',
'Michael',
'M',
'1988-01-04',
'Filho');

INSERT INTO Elmrasi.dependente VALUES( 
'12345678966',
'Alicia',
'F',
'1988-12-30',
'Filha');

INSERT INTO Elmrasi.dependente VALUES(
'12345678966',
'Elizabeth',
'F',
'1967-05-05',
'Esposa');

-- inserir os dados de João na tabela trabalha_em
INSERT INTO Elmrasi.trabalha_em VALUES(
'12345678966',
1,
32.5,
5);

INSERT INTO Elmrasi.trabalha_em VALUES(
'12345678966',
2,
7.5,
5
);

-- inserir os dados de Ronaldo na tabela trabalha_em
INSERT INTO Elmrasi.trabalha_em VALUES(
'66688444476',
3,
40,
5);

-- inserir os dados de Joice na tabela trabalha_em
INSERT INTO Elmrasi.trabalha_em VALUES(
'45345345376',
1,
20,
5);


INSERT INTO Elmrasi.trabalha_em VALUES(
'45345345376',
2,
20,
5);

-- inserir os dados de Fernando na tabela trabalha_em
INSERT INTO Elmrasi.trabalha_em VALUES(
'33344555587',
2,
10,
5);

INSERT INTO Elmrasi.trabalha_em VALUES(
'33344555587',
3,
10,
5);

INSERT INTO Elmrasi.trabalha_em VALUES(
'33344555587',
10,
10,
5);

INSERT INTO Elmrasi.trabalha_em VALUES(
'33344555587',
20,
10,
5);

-- inserir os dados de Alice na tabela trabalha_em
INSERT INTO Elmrasi.trabalha_em VALUES(
'99988777767',
30,
30,
4);

INSERT INTO Elmrasi.trabalha_em VALUES(
'99988777767',
10,
10,
4);

-- inserir os dados de André na tabela trabalha_em
INSERT INTO Elmrasi.trabalha_em VALUES(
'98798798733',
10,
35,
4);

INSERT INTO Elmrasi.trabalha_em VALUES(
'98798798733',
30,
5,
4);

-- inserir os dados de Jennifer na tabela trabalha_em
INSERT INTO Elmrasi.trabalha_em VALUES(
'98765432168',
30,
20,
4);

INSERT INTO Elmrasi.trabalha_em VALUES(
'98765432168',
20,
15,
4);

-- inserir os dados de Jorge na tabela trabalha_em
INSERT INTO Elmrasi.trabalha_em VALUES(
'88866555576',
20,
NULL,
1); 



