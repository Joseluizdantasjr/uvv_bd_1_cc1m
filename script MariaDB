/* criar meu usuário 
determinar minha senha*/
CREATE USER jose
IDENTIFIED BY "123";

-- permitir que eu crie bancos e tabelas
GRANT CREATE
ON *.*
TO jose;

-- criar o banco e chamá-lo de uvv
CREATE DATABASE uvv;

-- permitir que eu tenha todos os privilégios nesse banco
GRANT ALL PRIVILEGES
ON uvv
TO jose;

-- selecionar para usar o banco
USE uvv;

/*criar a tabela funcionário
criar todas as colunas
determinar a chave primária*/
CREATE TABLE funcionario (
                cpf CHAR(11) NOT NULL,
                primeiro_nome VARCHAR(15) NOT NULL,
                nome_meio CHAR(1),
                ultimo_nome VARCHAR(15) NOT NULL,
                data_nascimento DATE,
                endereco VARCHAR(40),
                sexo CHAR(1),
                salario DECIMAL(10,2),
                cpf_supervisor CHAR(11),
                PRIMARY KEY (cpf)
);

-- adicionar o comentário da tabela funcionário
ALTER TABLE funcionario COMMENT 'Tabela que armazena as informações dos funcionários.';

-- adicionar os comentários de todas as colunas da tabela funcionário
ALTER TABLE funcionario MODIFY COLUMN cpf CHAR(11) COMMENT 'CPF do funcionário. Será a PK da tabela.';

ALTER TABLE funcionario MODIFY COLUMN primeiro_nome VARCHAR(15) COMMENT 'Primeiro nome do funcionário.';

ALTER TABLE funcionario MODIFY COLUMN nome_meio CHAR(1) COMMENT 'Inicial do nome do meio.';

ALTER TABLE funcionario MODIFY COLUMN ultimo_nome VARCHAR(15) COMMENT 'Sobrenome do funcionário.';

ALTER TABLE funcionario MODIFY COLUMN endereco VARCHAR(40) COMMENT 'Endereço do funcionário.';

ALTER TABLE funcionario MODIFY COLUMN sexo CHAR(1) COMMENT 'Sexo do funcionário.';

ALTER TABLE funcionario MODIFY COLUMN salario DECIMAL(10, 2) COMMENT 'Salário do funcionário.';

ALTER TABLE funcionario MODIFY COLUMN cpf_supervisor CHAR(11) COMMENT 'CPF do supervisor. Será uma FK para a própria tabela (um auto-relacionamento).';

/*criar a tabela departamento
criar todas as colunas
determinar a chave primária*/
CREATE TABLE departamento (
                numero_departamento INT NOT NULL,
                nome_departamento VARCHAR(15) NOT NULL,
                cpf_gerente CHAR(11) NOT NULL,
                data_inicio_gerente DATE,
                PRIMARY KEY (numero_departamento)
);

-- adicionar o comentário da tabela funcionário
ALTER TABLE departamento COMMENT 'Tabela que armazena as informaçoẽs dos departamentos';

-- adicionar os comentários de todas as colunas da tabela funcionário
ALTER TABLE departamento MODIFY COLUMN numero_departamento INTEGER COMMENT 'Número do departamento. É a PK desta tabela.';

ALTER TABLE departamento MODIFY COLUMN nome_departamento VARCHAR(15) COMMENT 'Nome do departamento. Deve ser único.';

ALTER TABLE departamento MODIFY COLUMN cpf_gerente CHAR(11) COMMENT 'CPF do gerente do departamento. É uma FK para a tabela funcionários.';

ALTER TABLE departamento MODIFY COLUMN data_inicio_gerente DATE COMMENT 'Data do início do gerente no departamento.';

-- transformar nome_departamento em uma chave alternativa da tabela departamento
CREATE UNIQUE INDEX departamento_idx
 ON departamento
 ( nome_departamento );

/*criar a tabela projeto
criar todas as colunas
determinar a chave primária*/
CREATE TABLE projeto (
                numero_projeto INT NOT NULL,
                nome_projeto VARCHAR(15) NOT NULL,
                local_projeto VARCHAR(15),
                numero_departamento INT NOT NULL,
                PRIMARY KEY (numero_projeto)
);

-- adicionar o comentário da tabela projeto
ALTER TABLE projeto COMMENT 'Tabela que armazena as informações sobre os projetos dos departamentos.';

-- adicionar os comentários de todas as colunas da tabela projeto
ALTER TABLE projeto MODIFY COLUMN numero_projeto INTEGER COMMENT 'Número do projeto. É a PK desta tabela.';

ALTER TABLE projeto MODIFY COLUMN nome_projeto VARCHAR(15) COMMENT 'Nome do projeto. Deve ser único.';

ALTER TABLE projeto MODIFY COLUMN local_projeto VARCHAR(15) COMMENT 'Localização do projeto.';

ALTER TABLE projeto MODIFY COLUMN numero_departamento INTEGER COMMENT 'Número do departamento. É uma FK para a tabela departamento.';

-- transformar nome_projeto em uma chave alternativa da tabela projeto
CREATE UNIQUE INDEX projeto_idx
 ON projeto
 ( nome_projeto );

/*criar a tabela trabalha_em
criar todas as colunas
determinar a chave primária*/
CREATE TABLE trabalha_em (
                cpf_funcionario CHAR(11) NOT NULL,
                numero_projeto INT NOT NULL,
                horas DECIMAL(3,1) NOT NULL,
		numero_departamento_do_funcionario NOT NUll,
                PRIMARY KEY (cpf_funcionario, numero_projeto)
);

-- adicionar o comentário da tabela trabalha_em
ALTER TABLE trabalha_em COMMENT 'Tabela para armazenar quais funcionários trabalham em quais projetos.';

-- adicionar os comentários de todas as colunas da tabela trabalha_em
ALTER TABLE trabalha_em MODIFY COLUMN cpf_funcionario CHAR(11) COMMENT 'CPF do funcionário. Faz parte da PK desta tabela e é uma FK para a tabela funcionário.';

ALTER TABLE trabalha_em MODIFY COLUMN numero_projeto INTEGER COMMENT 'Número do projeto. Faz parte da PK desta tabela e é uma FK para a tabela projeto.';

ALTER TABLE trabalha_em MODIFY COLUMN horas DECIMAL(3, 1) COMMENT 'Horas trabalhadas pelo funcionário neste projeto.';

ALTER TABLE funcionario MODIFY COLUMN numero_departamento_do_funcionario INTEGER COMMENT 'Número do departamento do funcionário.';

/*criar a tabela localizacoes_departamento
criar todas as colunas 
determinar a chave primária*/
CREATE TABLE localizacoes_departamento (
                numero_departamento INT NOT NULL,
                local VARCHAR(15) NOT NULL,
                PRIMARY KEY (numero_departamento, local)
);

-- adicionar o comentário da tabela localizacoes_departamento
ALTER TABLE localizacoes_departamento COMMENT 'Tabela que armazena as possíveis localizações dos departamentos.';

-- adicionar os comentários de todas as colunas da tabela localizacoes_departamento
ALTER TABLE localizacoes_departamento MODIFY COLUMN numero_departamento INTEGER COMMENT 'Número do departamento. Faz parta da PK desta tabela e também é uma FK para a tabela departamento.';

ALTER TABLE localizacoes_departamento MODIFY COLUMN local VARCHAR(15) COMMENT 'Localização do departamento. Faz parte da PK desta tabela.';

/*criar a tabela dependente
criar todas as colunas 
determinar a chave primária*/
CREATE TABLE dependente (
                cpf_funcionario CHAR(11) NOT NULL,
                nome_dependente VARCHAR(15) NOT NULL,
                sexo CHAR(1),
                data_nascimento DATE,
                parentesco VARCHAR(15),
                PRIMARY KEY (cpf_funcionario, nome_dependente)
);

-- adicionar o comentário da tabela dependente
ALTER TABLE dependente COMMENT 'Tabela que armazena as informações dos dependentes dos funcionários.';

-- adicionar os comentários de todas as colunas da tabela dependente
ALTER TABLE dependente MODIFY COLUMN cpf_funcionario CHAR(11) COMMENT 'CPF do funcionário. Faz parte da PK desta tabela e é uma FK para a tabela funcionário.';

ALTER TABLE dependente MODIFY COLUMN nome_dependente VARCHAR(15) COMMENT 'Nome do dependente. Faz parte da PK desta tabela.';

ALTER TABLE dependente MODIFY COLUMN sexo CHAR(1) COMMENT 'Sexo do dependente.';

ALTER TABLE dependente MODIFY COLUMN data_nascimento DATE COMMENT 'Data de nascimento do dependente.';

ALTER TABLE dependente MODIFY COLUMN parentesco VARCHAR(15) COMMENT 'Descrição do parentesco do dependente com o funcionário.';

/* tornar cpf_funcionario uma chave estrangeira na tabela dependente
fazer ela se referir à chave primária cpf da tabela funcionário*/
ALTER TABLE dependente ADD CONSTRAINT funcionario_dependente_fk
FOREIGN KEY (cpf_funcionario)
REFERENCES funcionario (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

/* tornar cpf_gerente uma chave estrangeira na tabela departamento
fazer ela se referir à chave primária cpf da tabela funcionário*/
ALTER TABLE departamento ADD CONSTRAINT funcionario_departamento_fk
FOREIGN KEY (cpf_gerente)
REFERENCES funcionario (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

/* tornar cpf_funcionario uma chave estrangeira na tabela trabalha_em
fazer ela se referir à chave primária cpf da tabela funcionário*/
ALTER TABLE trabalha_em ADD CONSTRAINT funcionario_trabalha_em_fk
FOREIGN KEY (cpf_funcionario)
REFERENCES funcionario (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

/* tornar cpf_supervisor uma chave estrangeira na tabela funcionário
fazer ela se referir à chave primária cpf da mesma tabela*/
ALTER TABLE funcionario ADD CONSTRAINT funcionario_funcionario_fk
FOREIGN KEY (cpf_supervisor)
REFERENCES funcionario (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

/* tornar numero_departamento uma chave estrangeira na tabela localizacoes_departamento
fazer ela se referir à chave primária de mesmo nome da tabela departamento*/
ALTER TABLE localizacoes_departamento ADD CONSTRAINT departamento_localizacoes_departamento_fk
FOREIGN KEY (numero_departamento)
REFERENCES departamento (numero_departamento)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

/* tornar numero_departamento uma chave estrangeira na tabela projeto
fazer ela se referir à chave primária de mesmo nome da tabela departamento*/
ALTER TABLE projeto ADD CONSTRAINT departamento_projeto_fk
FOREIGN KEY (numero_departamento)
REFERENCES departamento (numero_departamento)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

/* tornar numero_departamento uma chave estrangeira na tabela trabalha_em
fazer ela se referir à chave primária de mesmo nome da tabela departamento*/
ALTER TABLE trabalha_em ADD CONSTRAINT departamento_trabalha_em_fk
FOREIGN KEY (numero_departamento)
REFERENCES departamento (numero_departamento)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

/* tornar numero_projeto_do_funcionario uma chave estrangeira na tabela trabalha_em
fazer ela se referir à chave primária de mesmo nome da tabela projeto*/
ALTER TABLE trabalha_em ADD CONSTRAINT projeto_trabalha_em_fk
FOREIGN KEY (numero_projeto_do_funcionario)
REFERENCES projeto (numero_projeto)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

-- inserir os dados de Jorge na tabela funcinario
INSERT INTO funcionario
VALUES(
'88866555576',
'Jorge', 
'E', 
'Brito', 
'1937-11-10', 
'Rua do Horto, 35, São Paulo, SP',
'M',
55000,
NULL
);

-- inserir os dados de Fernando na tabela funcinario
INSERT INTO funcionario
VALUES(
'33344555587',
'Fernando', 
'T', 
'Wong', 
'1955-12-08', 
'Rua da Lapa, 34, São Paulo, SP',
'M',
40000,
'88866555576'
);

-- inserir os dados de Jennifer na tabela funcinario
INSERT INTO funcionario
VALUES(
'98765432168',
'Jennifer', 
'S', 
'Souza', 
'1941-06-20', 
'Av. Arthur de Lima, 54, Santo André, SP',
'F',
43000,
'88866555576'
);

-- inserir os dados de João na tabela funcinario
INSERT INTO funcionario
VALUES(
'12345678966',
'João', 
'B', 
'Silva', 
'1965-01-09', 
'Rua das Flores, 751, São Paulo, SP',
'M',
30000,
'33344555587'
);

-- inserir os dados de Alice na tabela funcinario
INSERT INTO funcionario
VALUES(
'99988777767',
'Alice', 
'J', 
'Zelaya', 
'1968-01-19', 
'Rua Souza Lima, 35, Curitiba, PR',
'F',
25000,
'98765432168'
);

-- inserir os dados de Ronaldo na tabela funcinario
INSERT INTO funcionario
VALUES(
'66688444476',
'Ronaldo', 
'K', 
'Lima', 
'1962-09-15', 
'Rua Rebouças, 65, Piracicaba, SP',
'M',
38000,,
'33344555587'
);

-- inserir os dados de Joice na tabela funcinario
INSERT INTO funcionario
VALUES(
'45345345376',
'Joice', 
'A', 
'Leite', 
'1972-07-31', 
'Av. Lucas Obes, 74, São Paulo, SP',
'F',
25000,
'33344555587'
);

-- inserir os dados de André na tabela funcinario
INSERT INTO funcionario
VALUES(
'98798798733',
'André', 
'V', 
'Pereira', 
'1969-03-29', 
'Rua Timbeira, 35, São Paulo, SP',
'M',
25000,
'98765432168'
);

-- inserir os dados do departamento Pesquisa na tabela departamento

INSERT INTO departamento
VALUES(
5,
'Pesqusia',
'33344555587',
'1988-05-22'
);

-- inserir os dados do departamento Administração na tabela departamento

INSERT INTO departamento
VALUES(
4,
'Administração',
'98765432168',
'1995-01-01'
);

-- inserir os dados do departamento Matriz na tabela departamento

INSERT INTO departamento
VALUES(
1,
'Matriz',
'88866555576',
'1981-06-19');

-- inserir os dados do departamento 1 na tabela localizacoes_departamento
INSERT INTO localizacoes_departamento
VALUES(
1,
'São Paulo'
);

-- inserir os dados do departamento 4 na tabela localizacoes_departamento
INSERT INTO localizacoes_departamento
VALUES(
4,
'Mauá'
);

-- inserir os dados do departamento 5 de Santo André na tabela localizacoes_departamento
INSERT INTO localizacoes_departamento
VALUES(
5,
'Santo André'
);

-- inserir os dados do departamento 5 de Itu na tabela localizacoes_departamento
INSERT INTO localizacoes_departamento
VALUES(
5,
'Itu'
);

-- inserir os dados do departamento 5 de São Paulo na tabela localizacoes_departamento
INSERT INTO localizacoes_departamento
VALUES(
5,
'São Paulo'
);

-- inserir os dados do projeto 1 na tabela projeto
INSERT INTO projeto
VALUES(
1,
'Produto X',
'Santo André',
5);

-- inserir os dados do projeto 2 na tabela projeto
INSERT INTO projeto
VALUES(
2,
'Produto Y',
'Itu',
5
);

-- inserir os dados do projeto 3 na tabela projeto
INSERT INTO projeto
VALUES(
3,
'Produto Z',
'São Paulo',
5);

-- inserir os dados do projeto 10 na tabela projeto
INSERT INTO projeto
VALUES(
10,
'Informatização',
'Mauá',
4);

-- inserir os dados do projeto 20 na tabela projeto
INSERT INTO projeto
VALUES(
20,
'Reorganiazãço',
'São Paulo',
1);

-- inserir os dados do projeto 30 na tabela projeto
INSERT INTO projeto
VALUES(
30,
'Novos benefícios',
'Mauá',
4);

-- inserir os dados de João na tabela trabalha_em
INSERT INTO trabalha_em VALUES(
'12345678966',
1,
32.5,
5);

INSERT INTO trabalha_em VALUES(
'12345678966',
2,
7.5,
5
);

-- inserir os dados de Ronaldo na tabela trabalha_em
INSERT INTO trabalha_em VALUES(
'66688444476',
3,
40,
5);

-- inserir os dados de Joice na tabela trabalha_em
INSERT INTO trabalha_em VALUES(
'45345345376',
1,
20,
5);


INSERT INTO trabalha_em VALUES(
'45345345376',
2,
20,
5);

-- inserir os dados de Fernando na tabela trabalha_em
INSERT INTO trabalha_em VALUES(
'33344555587',
2,
10,
5);

'33344555587',
3,
10,
5);

INSERT INTO trabalha_em VALUES(
'33344555587',
10,
10,
5);

INSERT INTO trabalha_em VALUES(
'33344555587',
20,
10,
5);

-- inserir os dados de Alice na tabela trabalha_em
INSERT INTO trabalha_em VALUES(
'99988777767',
30,
30,
4);

INSERT INTO trabalha_em VALUES(
'99988777767',
10,
10,
4);

-- inserir os dados de André na tabela trabalha_em
INSERT INTO trabalha_em VALUES(
'98798798733',
10,
35,
4);

INSERT INTO trabalha_em VALUES(
'98798798733',
30,
5,
4);

-- inserir os dados de Jennifer na tabela trabalha_em
INSERT INTO trabalha_em VALUES(
'98765432168',
30,
20,
4);

INSERT INTO trabalha_em VALUES(
'98765432168',
20,
15,
4);

-- inserir os dados de Jorge na tabela trabalha_em
INSERT INTO trabalha_em VALUES(
'88866555576',
20,
NULL,
1); 